# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tts_pb2 as tts__pb2


class TTSStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoadModel = channel.unary_unary(
                '/chat_bot.tts.TTS/LoadModel',
                request_serializer=tts__pb2.LoadModelRequest.SerializeToString,
                response_deserializer=tts__pb2.LoadModelResponse.FromString,
                )
        self.GetVoices = channel.unary_unary(
                '/chat_bot.tts.TTS/GetVoices',
                request_serializer=tts__pb2.GetVoicesRequest.SerializeToString,
                response_deserializer=tts__pb2.GetVoicesResponse.FromString,
                )
        self.SetVoice = channel.unary_unary(
                '/chat_bot.tts.TTS/SetVoice',
                request_serializer=tts__pb2.SetVoiceRequest.SerializeToString,
                response_deserializer=tts__pb2.SetVoiceResponse.FromString,
                )
        self.GetStreamInfo = channel.unary_unary(
                '/chat_bot.tts.TTS/GetStreamInfo',
                request_serializer=tts__pb2.GetStreamInfoRequest.SerializeToString,
                response_deserializer=tts__pb2.GetStreamInfoReponse.FromString,
                )
        self.SynthesizeUS = channel.unary_stream(
                '/chat_bot.tts.TTS/SynthesizeUS',
                request_serializer=tts__pb2.SynthesizeRequest.SerializeToString,
                response_deserializer=tts__pb2.SynthesizeResponse.FromString,
                )


class TTSServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoadModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVoices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeUS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TTSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadModel,
                    request_deserializer=tts__pb2.LoadModelRequest.FromString,
                    response_serializer=tts__pb2.LoadModelResponse.SerializeToString,
            ),
            'GetVoices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVoices,
                    request_deserializer=tts__pb2.GetVoicesRequest.FromString,
                    response_serializer=tts__pb2.GetVoicesResponse.SerializeToString,
            ),
            'SetVoice': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVoice,
                    request_deserializer=tts__pb2.SetVoiceRequest.FromString,
                    response_serializer=tts__pb2.SetVoiceResponse.SerializeToString,
            ),
            'GetStreamInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamInfo,
                    request_deserializer=tts__pb2.GetStreamInfoRequest.FromString,
                    response_serializer=tts__pb2.GetStreamInfoReponse.SerializeToString,
            ),
            'SynthesizeUS': grpc.unary_stream_rpc_method_handler(
                    servicer.SynthesizeUS,
                    request_deserializer=tts__pb2.SynthesizeRequest.FromString,
                    response_serializer=tts__pb2.SynthesizeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat_bot.tts.TTS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TTS(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat_bot.tts.TTS/LoadModel',
            tts__pb2.LoadModelRequest.SerializeToString,
            tts__pb2.LoadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat_bot.tts.TTS/GetVoices',
            tts__pb2.GetVoicesRequest.SerializeToString,
            tts__pb2.GetVoicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat_bot.tts.TTS/SetVoice',
            tts__pb2.SetVoiceRequest.SerializeToString,
            tts__pb2.SetVoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStreamInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat_bot.tts.TTS/GetStreamInfo',
            tts__pb2.GetStreamInfoRequest.SerializeToString,
            tts__pb2.GetStreamInfoReponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SynthesizeUS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chat_bot.tts.TTS/SynthesizeUS',
            tts__pb2.SynthesizeRequest.SerializeToString,
            tts__pb2.SynthesizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
