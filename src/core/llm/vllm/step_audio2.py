import time
import logging
from dataclasses import dataclass, field

import numpy as np
from typing import AsyncGenerator, Iterator

from src.common.session import Session
from src.common.interface import ILlm
from src.common.chat_history import ChatHistory
from src.core.llm.base import BaseLLM
from src.common.logger import Logger
from src.common.utils import task
from src.types.llm.sampling import LMGenerateArgs
from .client.step_audio2_mini_vllm import StepAudio2MiniVLLMClient
from . import VLlmBase


@dataclass
class VllmStepAudio2Args:
    api_url: str = field(
        default="http://127.0.0.1:8000/v1/chat/completions",
        metadata={"help": "vllm api url. Default is 'http://127.0.0.1:8000/v1/chat/completions'."},
    )
    model_name: str = field(
        default="step-audio-2-mini",
        metadata={"help": "vllm register model name. Default is 'step-audio-2-mini'."},
    )
    lm_model_name_or_path: str = field(
        default=None,
        metadata={"help": "The pretrained language model to use. Default is None."},
    )
    warmup_prompt: str = field(
        default="Repeat the word 'weedge niu bi'.",
        metadata={"help": "warmup llm generate prompt. Default is 'weedge niu bi'."},
    )
    warmup_steps: int = field(
        default=2,
        metadata={"help": "The number of steps to run the warmup prompt. Default is 2."},
    )
    verbose: bool = field(
        default=False,
        metadata={"help": "Whether to print debug info. Default is False."},
    )
    gen_args: dict = field(default_factory=lambda: LMGenerateArgs().__dict__)

    def update(self, **kwargs):
        unused_kwargs = dict()
        for key, value in kwargs.items():
            if hasattr(self, key):
                setattr(self, key, value)
            else:
                unused_kwargs[key] = value
        return unused_kwargs


class VllmClientStepAudio2(VLlmBase):
    TAG = "llm_vllm_client_step_audio2"
    RATE = 24000

    def __init__(self, **kwargs) -> None:
        super().__init__()
        self.args = VllmStepAudio2Args()
        self.args.update(**kwargs)
        self.gen_args = LMGenerateArgs()
        self.gen_args.update(**self.args.gen_args)
        logging.info(f"{self.args=} {self.gen_args=}")

        self.client = StepAudio2MiniVLLMClient(
            self.args.api_url,
            self.args.model_name,
            tokenizer_path=self.args.lm_model_name_or_path,
        )

        self.warmup()

    @property
    def llm_tokenizer(self):
        return self.client.llm_tokenizer

    def warmup(self):
        if self.args.warmup_steps <= 0:
            return
        messages = [
            {"role": "system", "content": "You are a helpful assistant."},
            {"role": "human", "content": self.args.warmup_prompt},
            {"role": "assistant", "content": None},
        ]
        for step in range(self.args.warmup_steps):
            stream_iter = self.client.stream(
                messages,
                stream=True,
                max_tokens=128,
                temperature=0.7,
                top_p=0.9,
                frequency_penalty=0,
                repetition_penalty=1.05,
                skip_special_tokens=False,
                parallel_tool_calls=False,
            )
            first = True
            start = time.time()
            for _ in stream_iter:
                if first:
                    first = False
                    ttft = time.time() - start
            total_time = time.time() - start
            logging.info(f"warmup {step=} {ttft=:.3f}s {total_time=:.3f}s")

    def generate(self, session: Session, **kwargs) -> Iterator[str | dict | np.ndarray]:
        messages = session.ctx.state.get("messages", [])
        stop_ids = kwargs.pop("stop_ids", self.gen_args.lm_gen_stop_ids)
        max_completion_tokens = kwargs.get("max_completion_tokens") or kwargs.pop(
            "max_new_tokens", self.gen_args.lm_gen_max_new_tokens
        )
        temperature = kwargs.pop("temperature", self.gen_args.lm_gen_temperature)
        top_p = kwargs.pop("top_p", self.gen_args.lm_gen_top_p)
        top_k = kwargs.pop("top_k", self.gen_args.lm_gen_top_k)
        min_p = kwargs.pop("min_p", self.gen_args.lm_gen_min_p)
        repetition_penalty = kwargs.pop(
            "repetition_penalty", self.gen_args.lm_gen_repetition_penalty
        )
        stream_iter = self.client.stream(
            messages,
            stream=True,
            max_completion_tokens=max_completion_tokens,
            skip_special_tokens=False,
            parallel_tool_calls=False,
            temperature=temperature,
            top_p=top_p,
            top_k=top_k,
            min_p=min_p,
            repetition_penalty=repetition_penalty,
            **kwargs,
        )
        stop = False
        non_repeat_cn = 0

        # FIXME: if repetition_penalty is not work, a hack for repeat token to stop gen,
        pre_token_id = 0
        token_repeat_cn = 0

        tool_calls = []
        for response, text, audio, token_ids in stream_iter:
            if self.args.verbose is True:
                print(f"{response=} {text=} {audio=} {token_ids=}")
            if len(response.get("tool_calls", [])) > 0:
                if len(tool_calls) == 0:
                    tool_calls = response.get("tool_calls")
                else:
                    tool_calls[0]["function"]["arguments"] = response["tool_calls"][0]["function"][
                        "arguments"
                    ]
            if token_ids is None:
                if response.get("role", None) is None:
                    non_repeat_cn += 1
                    if non_repeat_cn > 10:
                        break
                continue
            non_repeat_cn = 0
            for token_id in token_ids:
                if token_id == pre_token_id:
                    token_repeat_cn += 1
                    if token_repeat_cn > 20:
                        stop = True
                        break
                else:
                    token_repeat_cn = 0
                pre_token_id = token_id
                if token_id in stop_ids:
                    stop = True
                    break
                yield token_id
            if stop:
                break
        yield {"tool_calls": tool_calls}


class MockVllmClientStepAudio2(VllmClientStepAudio2):
    TAG = "llm_vllm_client_step_audio2_mock"
    TOKEN_IDS = [
        99692,
        153195,
        155995,
        158182,
        158182,
        3837,
        158182,
        158182,
        158182,
        158182,
        100624,
        158182,
        158182,
        158182,
        158182,
        30709,
        158182,
        158182,
        155995,
        155995,
        30858,
        155995,
        155995,
        155995,
        155827,
        104413,
        157285,
        155103,
        154374,
        151840,
        73670,
        152974,
        153939,
        156422,
        156430,
        99654,
        155107,
        158182,
        158182,
        158182,
        100640,
        158182,
        158182,
        158182,
        158182,
        5122,
        155995,
        153745,
        157546,
        156098,
        73562,
        154297,
        158197,
        154542,
        156594,
        102275,
        154407,
        156351,
        156192,
        156113,
        104915,
        157179,
        156618,
        151821,
        152916,
        3837,
        153092,
        153581,
        152073,
        155448,
        30709,
        153442,
        156295,
        153139,
        152185,
        30858,
        154576,
        157525,
        158253,
        157592,
        97706,
        157744,
        157015,
        154675,
        156957,
        109075,
        155571,
        151932,
        152914,
        154288,
        101883,
        152525,
        154359,
        156636,
        152585,
        104264,
        154186,
        154837,
        156546,
        156510,
        102072,
        154857,
        154146,
        153340,
        157346,
        1773,
        157108,
        156635,
        157122,
        156289,
        108033,
        157021,
        155806,
        157770,
        157770,
        3837,
        153306,
        153701,
        155995,
        158182,
        42411,
        158182,
        158182,
        158182,
        158182,
        113333,
        158182,
        158182,
        158182,
        158182,
        106568,
        158182,
        158182,
        158182,
        155995,
        117025,
        155995,
        158072,
        153955,
        156236,
        103958,
        156185,
        155494,
        151853,
        153639,
        3837,
        153558,
        156127,
        154186,
        152721,
        80443,
        153259,
        156134,
        154594,
        152269,
        102153,
        156793,
        156776,
        151922,
        156937,
        102114,
        152596,
        153012,
        155607,
        155771,
        52510,
        157585,
        152659,
        156540,
        156777,
        1773,
        156741,
        156739,
        156658,
        158182,
        105639,
        158182,
        158182,
        158182,
        158182,
        104065,
        158182,
        158182,
        155995,
        155995,
        102256,
        155347,
        156128,
        157344,
        151748,
        3837,
        155910,
        152274,
        153823,
        152532,
        103955,
        152235,
        157149,
        156089,
        157771,
        100152,
        155342,
        152514,
        157284,
        155824,
        100005,
        157768,
        151852,
        153947,
        157367,
        101934,
        154605,
        153228,
        154278,
        156636,
        33108,
        157446,
        156860,
        157344,
        151738,
        106860,
        154116,
        157521,
        155311,
        157035,
        105962,
        156760,
        156445,
        157098,
        154168,
        113212,
        151731,
        153172,
        153443,
        151763,
        1773,
        157345,
        156129,
        151945,
        152775,
        155772,
        152287,
        154531,
        156571,
        32181,
        247,
        156726,
        156558,
        156576,
        153686,
        97084,
        155995,
        158182,
        158182,
        158182,
        100798,
        158182,
        158182,
        158182,
        158182,
        99258,
        158182,
        158182,
        155995,
        155914,
        30709,
        155149,
        154287,
        152400,
        152823,
        30858,
        155259,
        156473,
        153700,
        158070,
        101896,
        157826,
        154171,
        156224,
        156135,
        102226,
        152490,
        153458,
        153808,
        158182,
        33108,
        158182,
        158182,
        155995,
        155995,
        102435,
        155995,
        153862,
        153913,
        157528,
        3837,
        156881,
        153859,
        152894,
        156537,
        114098,
        152905,
        152347,
        156718,
        156439,
        100783,
        153901,
        157877,
        158068,
        156189,
        104011,
        157532,
        153918,
        154440,
        152180,
        99245,
        152023,
        156531,
        153862,
        155533,
        103985,
        156481,
        154150,
        156186,
        156490,
        3837,
        157498,
        157769,
        151728,
        153178,
        100671,
        151769,
        151834,
        153700,
        151744,
        100356,
        156635,
        155016,
        156052,
        158230,
        101169,
        152346,
        157287,
        154371,
        156576,
        80158,
        153659,
        158182,
        158182,
        158182,
        112751,
        158182,
        158182,
        158182,
        158182,
        106268,
        155914,
        153656,
        153577,
        152517,
        1773,
        152055,
        156274,
        156772,
        155337,
        99601,
        157583,
        157015,
        156934,
        153217,
        3837,
        153303,
        153147,
        158255,
        157526,
        112213,
        157526,
        155340,
        153552,
        154447,
        45181,
        154448,
        151809,
        153823,
        153579,
        46944,
        152064,
        154098,
        156782,
        156793,
        106035,
        157645,
        157744,
        157744,
        155071,
        102760,
        152895,
        151812,
        151974,
        152703,
        114050,
        155995,
        158182,
        158182,
        158182,
        46944,
        155995,
        155995,
        155995,
        155965,
        107480,
        153920,
        156074,
        154633,
        153421,
        5373,
        153886,
        157538,
        157853,
        152155,
        102024,
        153835,
        152650,
        156796,
        156256,
        100623,
        155930,
        156011,
        153821,
        151785,
        1773,
        156528,
        154119,
        152379,
        154517,
        220,
        158230,
        152407,
        158097,
        154389,
        42411,
        152445,
        157634,
        155905,
        157098,
        99880,
        156104,
        154177,
        156636,
        152730,
        100648,
        153755,
        155995,
        157777,
        157531,
        101108,
        157531,
        155341,
        153644,
        153672,
        100006,
        153723,
        155559,
        157664,
        157015,
        104774,
        154040,
        154766,
        157681,
        153963,
        106857,
        156716,
        158174,
        157278,
        154584,
        85336,
        158199,
        155689,
        158072,
        157357,
        104045,
        156223,
        154688,
        157346,
        152747,
        104056,
        153544,
        152012,
        151917,
        153619,
        102294,
        156937,
        156943,
        156955,
        157757,
        90395,
        154362,
        154453,
        154552,
        156288,
        100698,
        151929,
        151948,
        152263,
        152076,
        99283,
        156554,
        154501,
        157040,
        152412,
        111025,
        153825,
        153585,
        153709,
        157098,
        101884,
        156103,
        154231,
        156716,
        152584,
        104017,
        153457,
        154114,
        153237,
        152916,
        1773,
        152979,
        153463,
        151760,
        157287,
        154361,
        154443,
        151913,
        157588,
        155557,
        155260,
        158253,
        158255,
        157250,
        157654,
        156467,
        156794,
        153153,
        153864,
        153836,
        152996,
        155908,
        155341,
        157531,
        157531,
        157531,
        157531,
        157531,
        157534,
        153565,
        153511,
        156289,
        154094,
        156275,
        156128,
        154192,
        156222,
        154039,
        158074,
        156371,
        156717,
        156986,
        157388,
        157978,
        153929,
        156796,
        156717,
        154530,
        155501,
        154772,
        157692,
        156657,
        156822,
        157179,
        156373,
        151782,
        152268,
        152301,
        153826,
        153261,
        152262,
        152856,
        157958,
        153574,
        152428,
        156304,
        156457,
        157791,
        155610,
        153718,
        156139,
        153999,
        157773,
        156962,
        152485,
        157018,
        155422,
        151958,
        152958,
        158118,
        157655,
        157744,
        155476,
        153795,
        157527,
        154462,
        154450,
        154272,
        154031,
        153790,
        158154,
        157114,
        156872,
        154689,
        156866,
        157827,
        157344,
        156446,
        156357,
        151722,
        153197,
        153808,
        155671,
        157531,
        157531,
        157531,
        157531,
        155344,
        153808,
        154909,
        157528,
        154698,
        152494,
        157018,
        154773,
        151771,
        151993,
        156153,
        156561,
        154377,
        152214,
        153727,
        155828,
        155098,
        153725,
        155995,
        153765,
        153882,
        153882,
        155333,
        155521,
        156539,
        156512,
        157257,
        155825,
        158009,
        154123,
        151993,
        156153,
        154563,
        155010,
        156988,
        157015,
        152544,
        153110,
        153824,
        154464,
        154579,
        152269,
        154531,
        154468,
        156214,
        157549,
        155366,
        155365,
        151743,
        155343,
        154623,
        152466,
        153485,
        155995,
        157534,
        157534,
        157534,
        152512,
        153808,
        154753,
        154747,
        153477,
        152091,
        153966,
        156666,
        151850,
        153700,
        157344,
        154205,
        156212,
        156253,
        157957,
        156910,
        157015,
        152501,
        153954,
        157341,
        153935,
        157616,
        155586,
        151745,
        156694,
        155536,
        155583,
        152017,
        154033,
        157035,
        153057,
        153702,
        152991,
        152990,
        155177,
        154285,
        153457,
        154015,
        156526,
        157061,
        155686,
        151959,
        152688,
        157797,
        152854,
        152020,
        154288,
        154225,
        156468,
        154506,
        154514,
        158230,
        158233,
        153877,
        153882,
        153153,
        156795,
        153060,
        153756,
        158182,
        158182,
        158182,
        158182,
        158182,
        158182,
        155995,
        155617,
        155995,
        155995,
        155995,
        154645,
        157098,
        156373,
        156213,
        153902,
        157796,
        158083,
        156385,
        156233,
        156881,
        157533,
        153891,
        153404,
        155590,
        157534,
        157534,
        157534,
        154618,
        153808,
        153778,
        156799,
        157538,
        157614,
        156429,
        152262,
        152746,
        157111,
        152181,
        157632,
        157226,
        157351,
        156367,
        154388,
        152361,
        154956,
        156420,
        156689,
        152764,
        151876,
        156773,
        153142,
        156049,
        156016,
        157450,
        153125,
        153882,
        153717,
        153295,
        151804,
        154391,
        156740,
        157954,
        156331,
        156178,
        154630,
        155602,
        151698,
        152679,
        156333,
        156332,
        157042,
        157771,
        155594,
        155991,
        153561,
        153318,
        157722,
        154841,
        153484,
        157612,
        157612,
        157615,
        153241,
        153808,
        156130,
        154801,
        152687,
        152796,
        157711,
        154681,
        154120,
        157695,
        152922,
        152205,
        153855,
        152421,
        151839,
        156465,
        156635,
        156716,
        152899,
        151699,
        154091,
        156540,
        156774,
        154122,
        154448,
        153530,
        155095,
        153390,
        152403,
        152397,
        156015,
        157874,
        157225,
        155281,
        152428,
        156269,
        157610,
        153885,
        151734,
        153176,
        155690,
        153520,
        155995,
        153862,
        151759,
        153879,
        153801,
        153882,
        155819,
        155497,
        153958,
        156796,
        156796,
        152644,
        151759,
        153969,
        152586,
        155491,
        152655,
        151701,
        153921,
        156090,
        157547,
        153440,
        155995,
        158182,
        158182,
        158182,
        158182,
        158182,
        158182,
        158182,
        155995,
        155995,
        153538,
        154612,
        157538,
        156159,
        156124,
        157344,
        156613,
        156716,
        156061,
        156758,
        156641,
        154389,
        155689,
        152452,
        157528,
        157781,
        151885,
        152002,
        154281,
        153835,
        152347,
        156767,
        157526,
        155340,
        157899,
        157744,
        157015,
        156934,
        156875,
        157032,
        152643,
        153536,
        153478,
        157528,
        155344,
        153157,
        153727,
        155524,
        152444,
        151815,
        155933,
        152119,
        156776,
        154596,
        151933,
        153700,
        157830,
        154204,
        157365,
        156554,
        153298,
        156311,
        156716,
        154449,
        152818,
        158075,
        157101,
        156347,
        152215,
        152991,
        151846,
        151726,
        157528,
        157781,
        158096,
        156961,
        157013,
        157678,
        154770,
        151725,
        151764,
        157550,
        157549,
        153646,
        155341,
        157528,
        155341,
        153565,
        156589,
        156533,
        154807,
        155583,
        153312,
        153295,
        157744,
        156063,
        154104,
        156545,
        152098,
        156617,
        156265,
        152611,
        153048,
        152415,
        156710,
        151996,
        156799,
        157771,
        154289,
        158197,
        153983,
        153448,
        151725,
        153091,
        158197,
        156728,
        156730,
        158036,
        157554,
        156854,
        157344,
        154195,
        153891,
        153642,
        152196,
        153681,
        153808,
        155584,
        157531,
        157531,
        155344,
        153481,
        155995,
        153373,
        154367,
        154476,
        153666,
        154908,
        156935,
        157347,
        151767,
        156801,
        157305,
        156172,
        156109,
        157182,
        156343,
        156769,
        154233,
        155691,
        153610,
        158075,
        158077,
        156223,
        152503,
        157346,
        152748,
        156635,
        156634,
        155096,
        152400,
        152415,
        153416,
        153259,
        152471,
        151941,
        153663,
        155928,
        155551,
        156145,
        156787,
        156796,
        156842,
        157015,
        157015,
        152563,
        152505,
        156137,
        157343,
        156284,
        156078,
        153253,
        153529,
        154612,
        157537,
        157854,
        157043,
        156007,
        153820,
        156342,
        156117,
        153201,
        153431,
        158182,
        158182,
        158182,
        158182,
        158182,
        157858,
    ]

    def __init__(self, token_sleep_time_s=0.01, **kwargs) -> None:
        self.token_sleep_time_s = token_sleep_time_s
        super().__init__(**kwargs)

    def warmup(self):
        pass

    def generate(self, session: Session, **kwargs) -> Iterator[str | dict | np.ndarray]:
        for token_id in self.TOKEN_IDS:
            time.sleep(self.token_sleep_time_s)
            yield token_id
